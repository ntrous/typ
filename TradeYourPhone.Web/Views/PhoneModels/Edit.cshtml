@model TradeYourPhone.Core.ViewModels.PhoneModelViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/PhoneModel.js"></script>
<h2>Edit</h2>


<form action="" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PhoneModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Model.ID)

        <h4>Phone Model</h4>
        <div class="form-group">
            @Html.Label("Brand", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Model.PhoneMakeId, Model.PhoneMakes, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Model.PhoneMakeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.ModelName, "Model Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.ModelName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.ModelName, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Phone Condition Prices</h4>

        @for (int i = 0; i < Model.ConditionPrices.Count; i++)
        {
            @Html.HiddenFor(m => m.ConditionPrices[i].PhoneConditionId)
            @Html.HiddenFor(m => m.ConditionPrices[i].PhoneModelId)
            @Html.HiddenFor(m => m.ConditionPrices[i].ID)
            <div class="form-group">
                @Html.Label(Model.ConditionPrices[i].PhoneCondition.Condition + " $", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.ConditionPrices[i].OfferAmount, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Model.PrimaryImageString, "Primary Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Model.PrimaryImageString != string.Empty)
                {
                    @Html.Raw("<img id='primaryImageElement' src=\"data:image/jpeg;base64," + Model.Model.PrimaryImageString + "\" style='width:50px;' />")
                    <br /><br />
                }
                else
                {
                    @Html.Raw("<img id='primaryImageElement' />")
                    <br /><br />
                }
                @Html.TextBoxFor(model => model.PrimaryImage, new { onchange = "loadImageFromURL(this);", type = "file" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
