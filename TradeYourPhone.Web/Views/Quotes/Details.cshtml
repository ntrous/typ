@model TradeYourPhone.Core.ViewModels.QuoteDetailsViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/QuoteDetails.js"></script>

<h2>Details</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-3">
            <h4>Quote</h4>
            @Html.HiddenFor(model => model.quote.ID)
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.quote.QuoteStatusId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.quote.QuoteStatusId, Model.QuoteStatuses, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.quote.QuoteStatusId, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.CurrentQuoteStatus)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.PostageMethodId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.quote.PostageMethodId, Model.PostageMethods, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.quote.PostageMethodId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.QuoteReferenceId, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.QuoteReferenceId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.quote.QuoteReferenceId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.CreatedDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.CreatedDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.quote.CreatedDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.QuoteFinalisedDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.QuoteFinalisedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.QuoteFinalisedDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.QuoteExpiryDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.QuoteExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.QuoteExpiryDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            <h4>Customer</h4>
            @Html.HiddenFor(model => model.quote.CustomerId)
            @Html.HiddenFor(model => model.quote.Customer.ID)
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.FirstName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.Customer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.Customer.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.LastName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.Customer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.Customer.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.Customer.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.Customer.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.Customer.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.Customer.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            <h4>Address</h4>
            @Html.HiddenFor(model => model.quote.Customer.AddressId)
            @Html.HiddenFor(model => model.quote.Customer.Address.ID)
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.Address.AddressLine1, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.Customer.Address.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.Customer.Address.AddressLine1, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.Address.AddressLine2, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.Customer.Address.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.Customer.Address.AddressLine2, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.Address.StateId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.quote.Customer.Address.StateId, Model.States, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.quote.Customer.Address.StateId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.Address.PostCode, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.Customer.Address.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.Customer.Address.PostCode, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.Address.CountryId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.quote.Customer.Address.CountryId, Model.Countries, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.quote.Customer.Address.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            <h4>Payment Details</h4>
            @Html.HiddenFor(model => model.quote.Customer.PaymentDetailsId)
            @Html.HiddenFor(model => model.quote.Customer.PaymentDetail.ID)
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.PaymentDetail.PaymentTypeId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.quote.Customer.PaymentDetail.PaymentTypeId, Model.PaymentTypes, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.quote.Customer.PaymentDetail.PaymentTypeId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.PaymentDetail.BSB, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.Customer.PaymentDetail.BSB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.Customer.PaymentDetail.BSB, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.PaymentDetail.AccountNumber, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.Customer.PaymentDetail.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.Customer.PaymentDetail.AccountNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quote.Customer.PaymentDetail.PaypalEmail, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.quote.Customer.PaymentDetail.PaypalEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quote.Customer.PaymentDetail.PaypalEmail, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.LabelFor(model => model.quote.Notes, htmlAttributes: new { @class = "control-label" })<br />
                @Html.TextAreaFor(model => model.quote.Notes, new { @class = "form-control quote-notes", @cols = 80, @rows = 5 })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h4>Phones</h4>
            <hr />
            <div class="row">
                <table class="table">
                    <thead>
                        <tr>
                            <th>@Html.Label("ID", htmlAttributes: new { @class = "control-label" })</th>
                            <th>@Html.Label("Status", htmlAttributes: new { @class = "control-label" })</th>
                            <th>@Html.Label("Phone Make", htmlAttributes: new { @class = "control-label" })</th>
                            <th>@Html.Label("Phone Model", htmlAttributes: new { @class = "control-label" })</th>
                            <th>@Html.Label("Condition", htmlAttributes: new { @class = "control-label" })</th>
                            <th>@Html.Label("IMEI", htmlAttributes: new { @class = "control-label" })</th>
                            <th>@Html.Label("Purchase Price", htmlAttributes: new { @class = "control-label" })</th>
                            <th>@Html.Label("Sale Price", htmlAttributes: new { @class = "control-label" })</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.phones.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.EditorFor(model => model.phones[i].Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </td>
                                <td>
                                    @Html.HiddenFor(model => model.phones[i].QuoteId)
                                    @Html.HiddenFor(model => model.phones[i].Id)
                                    @Html.DropDownListFor(model => model.phones[i].PhoneStatusId, new SelectList(Model.PhoneStatuses, "Value", "Text", Model.phones[i].PhoneStatusId), htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.phones[i].PhoneStatusId, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.DropDownListFor(model => model.phones[i].PhoneMakeId, new SelectList(Model.PhoneMakes, "Value", "Text", Model.phones[i].PhoneMakeId), htmlAttributes: new { @class = "form-control PhoneMake" })
                                    @Html.ValidationMessageFor(model => model.quote.Phones.ElementAt(i).PhoneMakeId, "", new { @class = "text-danger" })
                                </td>

                                <td>
                                    @Html.DropDownListFor(model => model.phones[i].PhoneModelId, new SelectList(Model.phones[i].PhoneMake.PhoneModels.Select(u => new SelectListItem { Text = u.ModelName, Value = u.ID.ToString() }), "Value", "Text", Model.phones[i].PhoneModelId), htmlAttributes: new { @class = "form-control PhoneModel" })
                                    @Html.ValidationMessageFor(model => model.phones[i].PhoneModelId, "", new { @class = "text-danger" })
                                </td>

                                <td>
                                    @Html.DropDownListFor(model => model.phones[i].PhoneConditionId, new SelectList(Model.Conditions, "Value", "Text", Model.phones[i].PhoneConditionId), htmlAttributes: new { @class = "form-control PhoneCondition" })
                                    @Html.ValidationMessageFor(model => model.phones[i].PhoneConditionId, "", new { @class = "text-danger" })
                                </td>

                                <td>
                                    @Html.EditorFor(model => model.phones[i].IMEI, new { htmlAttributes = new { @class = "form-control" } })
                                </td>

                                <td>
                                    @Html.EditorFor(model => model.phones[i].PurchaseAmount, new { htmlAttributes = new { @class = "form-control purchase-amount" } })
                                    @Html.ValidationMessageFor(model => model.phones[i].PurchaseAmount, "", new { @class = "text-danger" })
                                </td>

                                <td>
                                    @Html.EditorFor(model => model.phones[i].SaleAmount, new { htmlAttributes = new { @class = "form-control sale-amount" } })
                                    @Html.ValidationMessageFor(model => model.phones[i].SaleAmount, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
        <div class="row">
            <div class="col-md-2">
                <div class="form-group">
                    <br />
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div class="row">
    <div class="col-md-12">
        <h4>Quote Status History</h4>
        <hr />
        <table class="table">
            <thead>
                <tr>
                    <th>@Html.Label("Status Date", htmlAttributes: new { @class = "control-label" })</th>
                    <th>@Html.Label("Status", htmlAttributes: new { @class = "control-label" })</th>
                    <th>@Html.Label("Created By", htmlAttributes: new { @class = "control-label" })</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var quoteHistory in Model.quote.QuoteStatusHistories)
                {
                    <tr>
                        <td>
                            <span>@quoteHistory.StatusDate</span>
                        </td>
                        <td>
                            <span>@quoteHistory.QuoteStatus.QuoteStatusName</span>
                        </td>
                        <td>
                            <span>@quoteHistory.AspNetUser.UserName</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>